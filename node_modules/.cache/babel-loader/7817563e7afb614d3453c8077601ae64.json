{"ast":null,"code":"var _jsxFileName = \"/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Context/FiltersContext.js\",\n    _s = $RefreshSig$();\n\n// Store selected filters and options\n// Store loading state\n// Devansh Kaloti\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltersContext = /*#__PURE__*/React.createContext();\n\nfunction FiltersContextProvider(props) {\n  _s();\n\n  const [filtersObj, setFiltersObj] = useState();\n  const [filtersList2, setFiltersList] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  function changeLoading(newVal) {\n    setLoading(newVal);\n  }\n\n  function updateFiltersList(field, newOptionsList) {\n    let newFilters = { ...filtersList2\n    };\n    newFilters[field] = newOptionsList;\n    setFiltersList(newFilters);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FiltersContext.Provider, {\n    value: {\n      filtersObj,\n      setFiltersObj,\n      filtersList2,\n      updateFiltersList,\n      loading,\n      changeLoading\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FiltersContextProvider, \"Oo8XdeX87DeOcliypS159ovWr8s=\");\n\n_c = FiltersContextProvider;\nexport { FiltersContextProvider, FiltersContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersContextProvider\");","map":{"version":3,"sources":["/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Context/FiltersContext.js"],"names":["React","useState","FiltersContext","createContext","FiltersContextProvider","props","filtersObj","setFiltersObj","filtersList2","setFiltersList","loading","setLoading","changeLoading","newVal","updateFiltersList","field","newOptionsList","newFilters","children"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,MAAMC,cAAc,gBAAGF,KAAK,CAACG,aAAN,EAAvB;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACnC,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAAEO,YAAF,EAAgBC,cAAhB,IAAmCR,QAAQ,CAAC,EAAD,CAAjD;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASW,aAAT,CAAuBC,MAAvB,EAA+B;AAC3BF,IAAAA,UAAU,CAACE,MAAD,CAAV;AACH;;AAED,WAASC,iBAAT,CAA4BC,KAA5B,EAAmCC,cAAnC,EAAkD;AAC9C,QAAIC,UAAU,GAAG,EAAC,GAAGT;AAAJ,KAAjB;AACAS,IAAAA,UAAU,CAACF,KAAD,CAAV,GAAoBC,cAApB;AACAP,IAAAA,cAAc,CAACQ,UAAD,CAAd;AACH;;AAED,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEX,MAAAA,UAAF;AAAcC,MAAAA,aAAd;AAA6BC,MAAAA,YAA7B;AAA2CM,MAAAA,iBAA3C;AAA8DJ,MAAAA,OAA9D;AAAuEE,MAAAA;AAAvE,KAAhC;AAAA,cACKP,KAAK,CAACa;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GApBQd,sB;;KAAAA,sB;AAsBT,SAAQA,sBAAR,EAAgCF,cAAhC","sourcesContent":["// Store selected filters and options\n// Store loading state\n// Devansh Kaloti\nimport React, {useState} from \"react\"\nconst FiltersContext = React.createContext()\n\nfunction FiltersContextProvider(props) {\n    const [ filtersObj, setFiltersObj ] = useState()\n    const [ filtersList2, setFiltersList ] = useState({})\n    const [ loading, setLoading ] = useState(true)\n\n    function changeLoading(newVal) {\n        setLoading(newVal)\n    }\n\n    function updateFiltersList (field, newOptionsList){\n        let newFilters = {...filtersList2}\n        newFilters[field] = newOptionsList\n        setFiltersList(newFilters)\n    }\n\n    return (\n        <FiltersContext.Provider value={{ filtersObj, setFiltersObj, filtersList2, updateFiltersList, loading, changeLoading}}>\n            {props.children}\n        </FiltersContext.Provider>\n    )\n}\n\nexport {FiltersContextProvider, FiltersContext}"]},"metadata":{},"sourceType":"module"}