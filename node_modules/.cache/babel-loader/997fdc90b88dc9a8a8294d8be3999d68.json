{"ast":null,"code":"var _jsxFileName = \"/Users/devanshkaloti/Desktop/react-learning/thdproductquerys/src/Components/FiltersComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TrueFalseSelectionsComponent from \"./TrueFalseSelectionsComponent\";\nimport { Grid } from \"@material-ui/core\";\nimport { FiltersContext } from \"../FiltersContext\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  selectContainer: {\n    display: 'flex',\n    flexWrap: 'nowrap'\n  },\n  selection: {\n    width: '100%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst FiltersComponent = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    addToCartState,\n    changeAddToCart\n  } = useContext(FiltersContext);\n  const {\n    filtersObj\n  } = props;\n\n  const loadOptionsForSelect = fieldName => {};\n\n  const options = [{\n    value: 'chocolate',\n    label: 'Chocolate'\n  }, {\n    value: 'strawberry',\n    label: 'Strawberry'\n  }, {\n    value: 'vanilla',\n    label: 'Vanilla'\n  }];\n\n  const renderFilters = () => {\n    if (filtersObj !== undefined) {\n      return filtersObj.map((field, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(TrueFalseSelectionsComponent, {\n          className: classes.selection,\n          selectionName: field.name,\n          options: field.options,\n          selectedOption: field.selectedOption,\n          changeOption: field.changeOption,\n          index: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Product Query and Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        style: {\n          marginTop: '10px'\n        },\n        children: [renderFilters(), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TrueFalseSelectionsComponent, {\n            className: classes.selection,\n            selectionName: \"Add to Cart\",\n            options: [true.toString(), false.toString()],\n            selectedOption: addToCartState,\n            changeOption: changeAddToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FiltersComponent, \"Hw7NiPJS415HPrtDSGHcE1ic2e8=\", false, function () {\n  return [useStyles];\n});\n\n_c = FiltersComponent;\n\nconst getUniqueData = productFieldData => {\n  return [...new Set(productFieldData)];\n};\n\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/Users/devanshkaloti/Desktop/react-learning/thdproductquerys/src/Components/FiltersComponent.js"],"names":["React","useContext","makeStyles","Card","CardActions","CardContent","Button","Typography","TrueFalseSelectionsComponent","Grid","FiltersContext","Select","useStyles","root","minWidth","selectContainer","display","flexWrap","selection","width","bullet","margin","transform","title","fontSize","pos","marginBottom","FiltersComponent","props","classes","addToCartState","changeAddToCart","filtersObj","loadOptionsForSelect","fieldName","options","value","label","renderFilters","undefined","map","field","index","name","selectedOption","changeOption","marginTop","toString","getUniqueData","productFieldData","Set"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TrueFalseSelectionsComponent from \"./TrueFalseSelectionsComponent\";\nimport {Grid} from \"@material-ui/core\";\n\nimport { FiltersContext } from \"../FiltersContext\";\nimport Select from 'react-select'\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    selectContainer: {\n        display: 'flex',\n        flexWrap: 'nowrap'\n    },\n    selection: {\n        width: '100%'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n\nconst FiltersComponent = (props) => {\n    const classes = useStyles();\n    const {addToCartState, changeAddToCart} = useContext(FiltersContext)\n    const { filtersObj } = props\n\n    const loadOptionsForSelect = (fieldName) => {\n        \n    }\n    const options = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'vanilla', label: 'Vanilla' }\n    ]\n\n    const renderFilters = () => {\n        if (filtersObj !== undefined) {\n            return (\n                    filtersObj.map((field, index) => (\n                        <Grid key={index} item xs={12} md={4}>\n                            <TrueFalseSelectionsComponent\n                                className={classes.selection}\n                                selectionName={field.name}\n                                options={field.options}\n                                selectedOption={field.selectedOption}\n                                changeOption={field.changeOption}\n                                index={index}\n                            />\n                        </Grid>\n                ))\n            )\n        }\n    }\n\n    return <Card className={classes.root}>\n        <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n                Product Query and Filters\n            </Typography>\n            <Grid container spacing={1} style={{marginTop: '10px'}}>\n                {\n                    renderFilters()\n                }\n\n\n                <Grid item xs={12} md={4}>\n                    <TrueFalseSelectionsComponent\n                        className={classes.selection}\n                        selectionName=\"Add to Cart\"\n                        options={[true.toString(), false.toString()]}\n                        selectedOption={addToCartState}\n                        changeOption={changeAddToCart}\n                    />\n                </Grid>\n\n                <Grid item xs={12} md={4}>\n                    {/*<TrueFalseSelectionsComponent className={classes.selection} selectionName=\"bopisAddToCart\"/>*/}\n                </Grid>\n                <Grid item xs={12} md={4}>\n                    {/*<TrueFalseSelectionsComponent className={classes.selection} selectionName=\"hasMoreOptions\"/>*/}\n                </Grid>\n            </Grid>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\">Reset All</Button>\n        </CardActions>\n    </Card>\n}\n\nconst getUniqueData = (productFieldData) => {\n    return [...new Set(productFieldData)]\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}