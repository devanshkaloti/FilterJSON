{"ast":null,"code":"var _jsxFileName = \"/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Pages/HomePage.js\",\n    _s = $RefreshSig$();\n\n// This file manages the home page layout and is responsible for data fetching and manipulation\n// Devansh Kaloti\nimport React, { createRef, useContext, useEffect, useRef, useState } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport { Button, Grid, TextField } from \"@material-ui/core\";\nimport FiltersComponent from \"../Components/FiltersComponent\";\nimport ProductListComponent from \"../Components/ProductListComponent\";\nimport { FiltersContext } from \"../Context/FiltersContext\";\nimport { flattenObject } from \"../Functions/commonFunctions\";\nimport { createRequire } from \"module\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomePage = () => {\n  _s();\n\n  const [data, setData] = useState(); // Products Data\n\n  const directDataRef = useRef();\n  const [directData, setDirectData] = useState(\"\"); // Products Data\n\n  const [url, setUrl] = useState(\"https://www.homedepot.ca/api/search/v1/search?q=wood&store=7008&pageSize=40&lang=en\"); // API for searchbox\n\n  const {\n    filtersObj,\n    setFiltersObj,\n    loading,\n    changeLoading\n  } = useContext(FiltersContext); // Selected Filters Data and loading state\n\n  useEffect(() => {\n    const fs = require('fs');\n\n    const sampleJson = require(\"./../extra/initial.json\");\n\n    console.log(sampleJson);\n    setDirectData(sampleJson);\n    parseDataDirectly(); // fetchData()\n  }, []); // Get the possible filter types based on first product returned in API\n\n  const getFilterOptions = (data, keyName) => {\n    const options = [];\n    data.forEach(dt => {\n      const flattenedDt = flattenObject(dt);\n\n      if (flattenedDt[keyName] != undefined) {\n        options.push(flattenedDt[keyName].toString());\n      }\n    });\n    return [...new Set(options)];\n  }; // Process filter objects and store in context\n\n\n  const setFiltersObject = data => {\n    const allFields = flattenObject(data[0]);\n    let filterObjects = [];\n\n    for (const field in allFields) {\n      let object = {\n        name: field,\n        options: getFilterOptions(data, field),\n        ref: /*#__PURE__*/createRef()\n      };\n      filterObjects.push(object);\n    }\n\n    setFiltersObj(filterObjects);\n  }; // Fetch data from API\n\n\n  const fetchData = () => {\n    changeLoading(true);\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data);\n      setFiltersObject(data['products']);\n      setData(data['products']);\n    }).then(() => {\n      changeLoading(false);\n    });\n  };\n\n  const parseDataDirectly = () => {\n    changeLoading(true);\n    const dt = JSON.parse(directData);\n    console.log(dt);\n    setFiltersObject(dt['products']);\n    setData(dt['products']);\n    changeLoading(false);\n  }; // Home Page Layout\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '30px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"false\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-full-width\",\n            label: \"URL\",\n            style: {\n              margin: 8\n            },\n            placeholder: \"https://\",\n            helperText: \"\",\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            defaultValue: \"https://www.homedepot.ca/api/search/v1/search?q=wood&store=7008&pageSize=40&lang=en\",\n            onChange: e => setUrl(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-full-width\",\n            label: \"JSON Input\",\n            style: {\n              margin: 8\n            },\n            placeholder: \"Simply Paste JSON Here\",\n            helperText: \"\",\n            fullWidth: true,\n            margin: \"normal\",\n            InputLabelProps: {\n              shrink: true\n            },\n            value: directData,\n            onChange: e => setDirectData(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          style: {\n            marginTop: -15\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            style: {\n              backgroundColor: \"#0063cc\",\n              borderColor: \"#0063cc\",\n              color: \"#fff\",\n              fontWeight: \"bold\"\n            },\n            fullWidth: true,\n            onClick: fetchData,\n            children: \"Query from URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          style: {\n            marginTop: -15\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            style: {\n              color: \"#000\",\n              fontWeight: \"bold\"\n            },\n            fullWidth: true,\n            onClick: parseDataDirectly,\n            children: \"Query from JSON Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FiltersComponent, {\n              filtersObj: filtersObj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 8,\n            children: /*#__PURE__*/_jsxDEV(ProductListComponent, {\n              loading: loading,\n              products: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 12\n  }, this);\n};\n\n_s(HomePage, \"rlTmD2SK9U9C69/8ld+Sr1kZIyM=\");\n\n_c = HomePage;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Pages/HomePage.js"],"names":["React","createRef","useContext","useEffect","useRef","useState","CssBaseline","Container","Button","Grid","TextField","FiltersComponent","ProductListComponent","FiltersContext","flattenObject","createRequire","HomePage","data","setData","directDataRef","directData","setDirectData","url","setUrl","filtersObj","setFiltersObj","loading","changeLoading","fs","require","sampleJson","console","log","parseDataDirectly","getFilterOptions","keyName","options","forEach","dt","flattenedDt","undefined","push","toString","Set","setFiltersObject","allFields","filterObjects","field","object","name","ref","fetchData","fetch","then","response","json","JSON","parse","marginTop","margin","shrink","e","target","value","backgroundColor","borderColor","color","fontWeight"],"mappings":"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","sourcesContent":["// This file manages the home page layout and is responsible for data fetching and manipulation\n// Devansh Kaloti\n\nimport React, {createRef, useContext, useEffect, useRef, useState} from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport {Button, Grid, TextField} from \"@material-ui/core\";\nimport FiltersComponent from \"../Components/FiltersComponent\";\nimport ProductListComponent from \"../Components/ProductListComponent\";\nimport {FiltersContext} from \"../Context/FiltersContext\";\nimport {flattenObject} from \"../Functions/commonFunctions\";\nimport { createRequire } from \"module\";\n\nconst HomePage = () => {\n    const [ data, setData ] = useState() // Products Data\n    const directDataRef = useRef();\n    const [ directData, setDirectData ] = useState(\"\") // Products Data\n    const [ url, setUrl ] = useState(\"https://www.homedepot.ca/api/search/v1/search?q=wood&store=7008&pageSize=40&lang=en\") // API for searchbox\n    const { filtersObj, setFiltersObj, loading, changeLoading } = useContext(FiltersContext) // Selected Filters Data and loading state\n\n\n    useEffect(() => {\n\n        const fs = require('fs');\n        const sampleJson = require(\"./../extra/initial.json\");\n\n        console.log(sampleJson)\n        setDirectData(sampleJson)\n        parseDataDirectly()\n        // fetchData()\n    }, []);\n\n    // Get the possible filter types based on first product returned in API\n    const getFilterOptions = (data, keyName) => {\n        const options = []\n\n        data.forEach(dt => {\n            const flattenedDt = flattenObject(dt)\n            if (flattenedDt[keyName] != undefined) {\n                options.push(flattenedDt[keyName].toString())\n            }\n        })\n\n        return [...new Set(options)]\n    }\n\n    // Process filter objects and store in context\n    const setFiltersObject = (data) => {\n        const allFields = flattenObject(data[0])\n        let filterObjects = []\n\n        for (const field in allFields) {\n            let object = {\n                name: field,\n                options: getFilterOptions(data, field),\n                ref: createRef(),\n            }\n            filterObjects.push(object)\n        }\n\n        setFiltersObj(filterObjects)\n    }\n\n    // Fetch data from API\n    const fetchData = () => {\n        changeLoading(true)\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setFiltersObject(data['products'])\n                setData(data['products'])\n            })\n            .then(() => {\n                changeLoading(false)\n            })\n    }\n\n    const parseDataDirectly = () => {\n        changeLoading(true)\n\n        const dt = JSON.parse(directData)\n        console.log(dt)\n\n        setFiltersObject(dt['products'])\n        setData(dt['products'])\n        changeLoading(false)\n    }\n\n    // Home Page Layout\n    return <div style={{marginTop: '30px'}}>\n        <CssBaseline />\n        <Container maxWidth=\"false\">\n            <Grid container spacing={3}>\n                <Grid item xs={6}>\n                    <TextField\n                        id=\"standard-full-width\"\n                        label=\"URL\"\n                        style={{ margin: 8 }}\n                        placeholder=\"https://\"\n                        helperText=\"\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        defaultValue=\"https://www.homedepot.ca/api/search/v1/search?q=wood&store=7008&pageSize=40&lang=en\"\n                        onChange={(e) => setUrl(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={6}>\n                    <TextField\n                        id=\"standard-full-width\"\n                        label=\"JSON Input\"\n                        style={{ margin: 8 }}\n                        placeholder=\"Simply Paste JSON Here\"\n                        helperText=\"\"\n                        fullWidth\n                        margin=\"normal\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={directData}\n                        onChange={(e) => setDirectData(e.target.value)}\n                    />\n                </Grid>\n                <Grid item xs={2} style={{marginTop: -15}}>\n                    <Button variant=\"contained\" style={{backgroundColor: \"#0063cc\", borderColor: \"#0063cc\", color: \"#fff\", fontWeight: \"bold\"}} fullWidth onClick={fetchData}>Query from URL</Button>\n                </Grid>\n                <Grid item xs={2} style={{marginTop: -15}}>\n                    <Button variant=\"outlined\" style={{color: \"#000\", fontWeight: \"bold\"}} fullWidth onClick={parseDataDirectly}>Query from JSON Input</Button>\n                </Grid>\n            </Grid>\n            <Grid container spacing={3}>\n                { loading ? <></> :\n                    <>\n                        <Grid item xs={4}>\n                            {/*Filters*/}\n                            <FiltersComponent filtersObj={filtersObj} />\n                        </Grid>\n                        <Grid item xs={8}>\n                            {/*Product Table*/}\n                            <ProductListComponent loading={loading} products={data} />\n                        </Grid>\n                    </>\n                }\n            </Grid>\n        </Container>\n    </div>\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}