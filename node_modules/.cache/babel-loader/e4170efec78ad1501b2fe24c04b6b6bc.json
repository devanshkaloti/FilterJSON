{"ast":null,"code":"var _jsxFileName = \"/Users/devanshkaloti/Desktop/react-learning/thdproductquerys/src/FiltersContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltersContext = /*#__PURE__*/React.createContext();\n\nfunction FiltersContextProvider(props) {\n  _s();\n\n  // const [addToCartState, setAddToCartState] = useState()\n  const [filtersObj, setFiltersObj] = useState();\n  const [filtersList, setFiltersList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  function changeLoading(newVal) {\n    setLoading(newVal);\n  }\n\n  function changeAddToCart(newState) {// console.log(newState)\n    // setAddToCartState(newState)\n  }\n\n  const updateFiltersList = (field, newOptionsList) => {\n    let newFilters = filtersList;\n\n    if (newFilters.length == 0) {\n      const x = newFilters.indexOf(5);\n      newFilters = newFilters.slice(0, x).concat(newFilters.slice(-x));\n    }\n\n    newFilters[field] = newOptionsList;\n    setFiltersList(newFilters);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FiltersContext.Provider, {\n    value: {\n      changeAddToCart,\n      filtersObj,\n      setFiltersObj,\n      filtersList,\n      updateFiltersList,\n      loading,\n      changeLoading\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FiltersContextProvider, \"gZoAkQbWsI/9lrhJF8CJ3b9U4uk=\");\n\n_c = FiltersContextProvider;\nexport { FiltersContextProvider, FiltersContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersContextProvider\");","map":{"version":3,"sources":["/Users/devanshkaloti/Desktop/react-learning/thdproductquerys/src/FiltersContext.js"],"names":["React","useState","FiltersContext","createContext","FiltersContextProvider","props","filtersObj","setFiltersObj","filtersList","setFiltersList","loading","setLoading","changeLoading","newVal","changeAddToCart","newState","updateFiltersList","field","newOptionsList","newFilters","length","x","indexOf","slice","concat","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AACA,MAAMC,cAAc,gBAAGF,KAAK,CAACG,aAAN,EAAvB;;AAEA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACnC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,EAA5C;AACA,QAAM,CAAEO,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAES,OAAF,EAAWC,UAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASW,aAAT,CAAuBC,MAAvB,EAA+B;AAC3BF,IAAAA,UAAU,CAACE,MAAD,CAAV;AACH;;AAED,WAASC,eAAT,CAAyBC,QAAzB,EAAmC,CAC/B;AACA;AACH;;AAED,QAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,cAAR,KAA2B;AACjD,QAAIC,UAAU,GAAGX,WAAjB;;AACA,QAAIW,UAAU,CAACC,MAAX,IAAqB,CAAzB,EAA4B;AACxB,YAAMC,CAAC,GAAGF,UAAU,CAACG,OAAX,CAAmB,CAAnB,CAAV;AACAH,MAAAA,UAAU,GAAGA,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoBF,CAApB,EAAuBG,MAAvB,CAA8BL,UAAU,CAACI,KAAX,CAAiB,CAACF,CAAlB,CAA9B,CAAb;AAEH;;AACDF,IAAAA,UAAU,CAACF,KAAD,CAAV,GAAoBC,cAApB;AACAT,IAAAA,cAAc,CAACU,UAAD,CAAd;AACH,GATD;;AAWA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEL,MAAAA,eAAF;AAAmBR,MAAAA,UAAnB;AAA+BC,MAAAA,aAA/B;AAA8CC,MAAAA,WAA9C;AAA2DQ,MAAAA,iBAA3D;AAA8EN,MAAAA,OAA9E;AAAuFE,MAAAA;AAAvF,KAAhC;AAAA,cACKP,KAAK,CAACoB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA/BQrB,sB;;KAAAA,sB;AAiCT,SAAQA,sBAAR,EAAgCF,cAAhC","sourcesContent":["import React, {useState} from \"react\"\nconst FiltersContext = React.createContext()\n\nfunction FiltersContextProvider(props) {\n    // const [addToCartState, setAddToCartState] = useState()\n    const [filtersObj, setFiltersObj] = useState()\n    const [ filtersList, setFiltersList ] = useState([])\n    const [ loading, setLoading ] = useState(true)\n\n    function changeLoading(newVal) {\n        setLoading(newVal)\n    }\n\n    function changeAddToCart(newState) {\n        // console.log(newState)\n        // setAddToCartState(newState)\n    }\n\n    const updateFiltersList = (field, newOptionsList) => {\n        let newFilters = filtersList\n        if (newFilters.length == 0) {\n            const x = newFilters.indexOf(5);\n            newFilters = newFilters.slice(0, x).concat(newFilters.slice(-x));\n\n        }\n        newFilters[field] = newOptionsList\n        setFiltersList(newFilters)\n    }\n\n    return (\n        <FiltersContext.Provider value={{ changeAddToCart, filtersObj, setFiltersObj, filtersList, updateFiltersList, loading, changeLoading}}>\n            {props.children}\n        </FiltersContext.Provider>\n    )\n}\n\nexport {FiltersContextProvider, FiltersContext}"]},"metadata":{},"sourceType":"module"}