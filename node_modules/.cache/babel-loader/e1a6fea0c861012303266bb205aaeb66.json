{"ast":null,"code":"var _jsxFileName = \"/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Components/FiltersComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from \"@material-ui/core\";\nimport { FiltersContext } from \"../Context/FiltersContext\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  selectContainer: {\n    display: 'flex',\n    flexWrap: 'nowrap'\n  },\n  selection: {\n    width: '100%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nconst FiltersComponent = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    updateFiltersList\n  } = useContext(FiltersContext);\n  const {\n    filtersObj\n  } = props;\n\n  const getPossibleFilterOptions = variants => {\n    const options = [];\n    variants.forEach(variant => {\n      options.push({\n        value: variant,\n        label: variant\n      });\n    });\n    return options;\n  };\n\n  const handleFilterUpdate = (field, selectedOptions) => {\n    updateFiltersList(field, selectedOptions);\n  };\n\n  const renderFilters = () => {\n    if (filtersObj !== undefined) {\n      return filtersObj.map((field, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), field.name, /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: field.name,\n          closeMenuOnSelect: false,\n          name: field.name,\n          options: getPossibleFilterOptions(field.options),\n          isMulti: true,\n          onChange: e => handleFilterUpdate(field.name, e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Product Query and Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        style: {\n          marginTop: '10px'\n        },\n        children: renderFilters()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        children: \"Reset All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n};\n\n_s(FiltersComponent, \"MJPbiT9BLff+QnvcE+xbPyX40P4=\", false, function () {\n  return [useStyles];\n});\n\n_c = FiltersComponent;\nexport default FiltersComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"FiltersComponent\");","map":{"version":3,"sources":["/Users/devanshkaloti/Desktop/react-learning/THDFilterJSON/src/Components/FiltersComponent.js"],"names":["React","useContext","makeStyles","Card","CardActions","CardContent","Button","Typography","Grid","FiltersContext","Select","useStyles","root","minWidth","selectContainer","display","flexWrap","selection","width","bullet","margin","transform","title","fontSize","pos","marginBottom","FiltersComponent","props","classes","updateFiltersList","filtersObj","getPossibleFilterOptions","variants","options","forEach","variant","push","value","label","handleFilterUpdate","field","selectedOptions","renderFilters","undefined","map","index","name","e","marginTop"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid} from \"@material-ui/core\";\n\nimport { FiltersContext } from \"../Context/FiltersContext\";\nimport Select from 'react-select'\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    selectContainer: {\n        display: 'flex',\n        flexWrap: 'nowrap'\n    },\n    selection: {\n        width: '100%'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\n\nconst FiltersComponent = (props) => {\n    const classes = useStyles();\n    const {updateFiltersList} = useContext(FiltersContext)\n    const { filtersObj } = props\n\n    const getPossibleFilterOptions = (variants) => {\n        const options = []\n        variants.forEach(variant => {\n            options.push({value: variant, label: variant})\n        })\n        return options\n    }\n\n    const handleFilterUpdate = (field, selectedOptions) => {\n        updateFiltersList(field, selectedOptions)\n    }\n\n    const renderFilters = () => {\n        if (filtersObj !== undefined) {\n            return (\n                    filtersObj.map((field, index) => (\n                        <Grid key={index} item xs={12} md={6}>\n                            <br />{field.name}\n                            <Select\n                                placeholder={field.name}\n                                closeMenuOnSelect={false}\n                                name={field.name}\n                                options={getPossibleFilterOptions(field.options)}\n                                isMulti\n                                onChange={(e) => handleFilterUpdate(field.name, e)}\n                            />\n                        </Grid>\n                ))\n            )\n        }\n    }\n\n    return <Card className={classes.root}>\n        <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">\n                Product Query and Filters\n            </Typography>\n            <Grid container spacing={1} style={{marginTop: '10px'}}>\n                {renderFilters()}\n            </Grid>\n        </CardContent>\n        <CardActions>\n            <Button size=\"small\">Reset All</Button>\n        </CardActions>\n    </Card>\n}\n\nexport default FiltersComponent"]},"metadata":{},"sourceType":"module"}